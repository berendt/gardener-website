<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Gardener</title><link>https://gardener.cloud/v1.12.8/concepts/architecture/</link><description>Recent content in Architecture on Gardener</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://gardener.cloud/v1.12.8/concepts/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Bouquet</title><link>https://gardener.cloud/components/bouquet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/bouquet/</guid><description>Bouquet Bouquet is a draft addon manager for the Gardener. It incorporates some of the requested features of the community but not yet all of them.
Caution: This software is early alpha. It is not meant for production use and shall (currently) only serve as a possible outlook of what is possible with pre-deployed software on Gardener Kubernetes clusters.
Installation If you want to deploy Bouquet on a target Gardener cluster, run the following:</description></item><item><title>Dashboard</title><link>https://gardener.cloud/components/dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/dashboard/</guid><description>Gardener Dashboard
Demo Development Setup Install Install all dependencies
yarn Configuration KUBECONFIG If the dashboard is not running in the Garden Cluster you have to point the kubeconfig to Garden Cluster. This can be done in the default kubeconfig file in ${HOME}/.kube/config or by the KUBECONFIG environment variable.
GARDENER_CONFIG The configuration file of the Gardener Dashboard can be specified as first command line argument or as environment variable GARDENER_CONFIG at the server process.</description></item><item><title>gardenctl</title><link>https://gardener.cloud/components/gardenctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/gardenctl/</guid><description>Gardenctl
What is gardenctl? gardenctl is a command-line client for administrative purposes for the Gardener. It facilitates the administration of one or many garden, seed and shoot clusters, e.g. to check for issues which occured in one of these clusters. Details about the concept behind the Gardener are described in the Gardener wiki.
Installation gardenctl is shipped for mac and linux in a binary format.
Option 1: Install the latest release with Homebrew (macOS and Linux) as follows:</description></item><item><title>Gardener</title><link>https://gardener.cloud/components/gardener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/gardener/</guid><description>Gardener
Gardener implements the automated management and operation of Kubernetes clusters as a service and provides a fully validated extensibility framework that can be adjusted to any programmatic cloud or infrastructure provider.
Gardener is 100% Kubernets-native and exposes its own Cluster API to create homogeneous clusters on all supported infrastructures. This API differs from SIG Cluster Lifecycle&amp;rsquo;s Cluster API that only harmonizes how to get to clusters, while Gardener&amp;rsquo;s Cluster API goes one step further and also harmonizes the make-up of the clusters themselves.</description></item><item><title>kubify</title><link>https://gardener.cloud/components/kubify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gardener.cloud/components/kubify/</guid><description>Kubify Kubify is a Terraform based provisioning project for setting up production ready Kubernetes clusters on public and private Cloud infrastructures. Kubify currently supports:
OpenStack AWS Azure Key features of Kubify are:
Kubernetes v1.10.12 Etcd v3.3.10 multi master node setup Etcd backup and restore Supports rolling updates To start using or developing Kubify locally See our documentation in the /docs repository or find the main documentation here.</description></item></channel></rss>